{"version":3,"sources":["App.tsx","content/members.ts","content/youtube/index.ts","SocialComponent/VideoThumbnail.tsx","SocialComponent/YouTubeCard.tsx","panels/HeadsPanel.tsx","panels/AboutPanel.tsx","panels/BisectPanel.tsx","panels/DiscordPanels.tsx","panels/ModpackInfo.tsx","panels/Catchphrase.tsx","pages/HomePage.tsx","pages/MembersPage.tsx","pages/NotFoundPage.tsx","SocialComponent/SocialBadges.tsx","SocialComponent/TwitchPage.tsx","SocialComponent/TwitterFeed.tsx","SocialComponent/YouTubeList.tsx","pages/ProfilePage.tsx","index.tsx"],"names":["Header","Layout","Content","Footer","ReactGA","initialize","process","err","console","error","App","className","to","src","alt","theme","mode","selectable","Item","users","creator","username","socials","minecraft","id","twitter","youtube","twitch","instagram","getIdsBySocial","social","reduce","acc","user","push","YouTube","getUploadPlaylistId","channelId","a","fetchChannelData","channelData","contentDetails","relatedPlaylists","uploads","getPlaylistContent","mem","playlistId","playlists","items","maxAge","channels","get","channel","fetchLatestVideos","maxResults","channelIds","ids","Promise","all","map","playlistIds","videos","flat","sort","b","Date","snippet","publishedAt","getTime","slice","video","VideoThumbnail","thumbnails","width","link","imageLink","maxres","high","url","href","rel","target","P","Typography","Paragraph","Title","A","Link","YouTubeCard","term","title","description","channelTitle","find","videoId","avatar","align","size","wrap","direction","level","type","ellipsis","rows","HeadsPanel","heads","localeCompare","u","AboutPanel","BisectPanel","DiscordWidget","height","frameBorder","sandbox","ModpackInfo","phrases","Catchphrase","useState","phrase","setPhrase","useEffect","Math","floor","random","length","italic","HomePage","React","latestVideos","setLatestVideos","then","carouselItems","vcd","autoplay","effect","MembersPage","creators","filter","nonCreators","shape","NotFoundPage","SocialBadge","color","icon","display","TwitterBadge","TwitterOutlined","YoutubeBadge","YoutubeOutlined","TwitchBadge","CameraOutlined","InstagramBadge","InstagramOutlined","SocialBadges","TwitchPage","muted","TwitterFeed","screenName","dataSource","sourceType","options","chrome","dnt","YouTubeList","playlistItems","loading","itemLayout","renderItem","extra","Meta","dateFormat","ProfilePage","navigate","useNavigate","useParams","youtubeChannelData","setYouTubeChannelData","setPlaylistItems","notification","message","Badges","gutter","span","style","margin","lg","md","sm","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.9ef8ba61.chunk.js","sourcesContent":["import \"./App.less\";\nimport { Layout, Menu } from \"antd\";\nimport React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport ReactGA from \"react-ga4\";\n\nconst { Header, Content, Footer } = Layout;\n\ntry {\n  ReactGA.initialize(process.env.REACT_APP_GA_ID || \"\");\n} catch (err) {\n  console.error(\"GA initialization failed\", err);\n}\n\nfunction App() {\n  return (\n    <Layout className=\"app\">\n      <Header>\n        <Link to=\"/\">\n          <img\n            className=\"logo\"\n            src={`${process.env.PUBLIC_URL}/images/forge_cutout.png`}\n            alt=\"\"\n          />\n        </Link>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n          <Menu.Item key=\"/\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/members\">\n            <Link to=\"/members\">Members</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content className=\"content\">\n        <Outlet />\n      </Content>\n\n      <Footer className=\"footer\">Copyright © 2021 Iron Assembly</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","export type SocialLink = {\n  id: string;\n};\n\nexport type User = {\n  username: string;\n  creator: boolean;\n  socials: { minecraft: SocialLink; [key: string]: SocialLink };\n  description?: string;\n};\n\nexport const users: User[] = [\n  {\n    creator: true,\n    username: \"Veeq\",\n    socials: {\n      minecraft: { id: \"4ada8e80-497b-4137-8a95-2cc3757413e6\" },\n      twitter: { id: \"VeeqPlays\" },\n      youtube: { id: \"UCeT-ST2d4VlwOi7JU1o148w\" },\n      twitch: { id: \"veeqplays\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"fusion\",\n    socials: {\n      minecraft: { id: \"8d5d21ce-3f02-4994-bfcc-0bc57e82fc6c\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"boredy\",\n    socials: {\n      minecraft: { id: \"63ede22f-69a7-429e-960b-1a3410cb660e\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"XxxSalvador\",\n    socials: {\n      minecraft: { id: \"06695828-9677-4892-8f98-8e254febc6c5\" },\n    },\n  },\n  {\n    creator: true,\n    username: \"Coconut_Beast\",\n    socials: {\n      minecraft: { id: \"1873c79d-c48c-418a-9b02-3114ed338b9a\" },\n      youtube: { id: \"UCn6dT3-it_j7uJ2ZUXmBqJQ\" },\n      twitch: { id: \"coconut_beast\" },\n      instagram: { id: \"the_coconut_beast\" },\n    },\n  },\n  {\n    creator: true,\n    username: \"Darrix2364\",\n    socials: {\n      minecraft: { id: \"af3edba7-94f4-494b-8235-16f727ccadab\" },\n      youtube: { id: \"UCJ13xqeoVJJtd7r5pb8myJg\" },\n      twitch: { id: \"darrix2364\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"DMoney6\",\n    socials: {\n      minecraft: { id: \"e4af981b-8c65-4f26-b97d-02fa4dc3b4df\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"_mid_knight_\",\n    socials: {\n      minecraft: { id: \"a2208746-25c9-4abf-a76b-31390b9d67b1\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"emanemone\",\n    socials: {\n      minecraft: { id: \"b95c2f80-66e0-4561-81a3-8dd671bc5065\" },\n    },\n  },\n];\n\nexport const getUser = (term: string): User | undefined => {\n  return users.find((user) => user.username === term);\n};\n\nexport const getUserBySocial = (\n  term: string,\n  social: string\n): User | undefined => {\n  return users.find((user) => user.socials[social]?.id === term);\n};\n\nexport const getIdsBySocial = (social: string): string[] => {\n  return users.reduce((acc, user) => {\n    if (user.socials[social]) {\n      acc.push(user.socials[social].id);\n    }\n    return acc;\n  }, [] as string[]);\n};\n","import { getIdsBySocial } from \"../members\";\nimport { LatestVideosOptions, VideoWithChannel } from \"./types\";\nimport mem from \"mem\";\nimport YouTube from \"youtube.ts\";\n\nconst youtube = new YouTube(process.env.REACT_APP_GOOGLE_API_KEY);\n\nexport const getUploadPlaylistId = async (channelId: string) => {\n  const channelData = await fetchChannelData(channelId);\n  return channelData.contentDetails.relatedPlaylists.uploads;\n};\n\nexport const getPlaylistContent = mem(\n  async (playlistId: string) => {\n    const items = (\n      await youtube.playlists.items(\n        `https://www.youtube.com/playlist?list=${playlistId}`\n      )\n    ).items;\n    return items;\n  },\n  { maxAge: 10 * 60 * 1000 } // 10 minutes\n);\n\nexport const fetchChannelData = mem(\n  async (channelId: string) => {\n    const channel = await youtube.channels.get(\n      `https://www.youtube.com/channel/${channelId}`\n    );\n    return channel;\n  },\n  { maxAge: 10 * 60 * 1000 } // 10 minutes\n);\n\nexport const fetchLatestVideos = async ({\n  maxResults,\n  channelIds,\n}: LatestVideosOptions): Promise<VideoWithChannel[]> => {\n  const ids = channelIds ?? getIdsBySocial(\"youtube\");\n\n  const playlistIds = await Promise.all(ids.map(getUploadPlaylistId));\n  const videos = (await Promise.all(playlistIds.map(getPlaylistContent)))\n    .flat()\n    .sort((a, b) => {\n      return (\n        new Date(b.snippet.publishedAt).getTime() -\n        new Date(a.snippet.publishedAt).getTime()\n      );\n    })\n    .slice(0, maxResults);\n\n  return await Promise.all(\n    videos.map(async (video) => {\n      const channel = await fetchChannelData(video.snippet.channelId);\n      return {\n        video,\n        channel,\n      };\n    })\n  );\n};\n","import React from \"react\";\nimport type { YoutubeVideoSnippet } from \"youtube.ts\";\n\n\nexport type VideoThumbnailProps = {\n  thumbnails: YoutubeVideoSnippet[\"thumbnails\"];\n  alt: string;\n  width?: number;\n  link?: string;\n};\n\nexport const VideoThumbnail: React.FC<VideoThumbnailProps> = ({\n  thumbnails,\n  alt,\n  width = 600,\n  link = \"\",\n}) => {\n  const image = thumbnails.maxres || thumbnails.high;\n  const imageLink = image.url;\n\n  return (\n    <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n      <img\n        className={`video-thumbnail`}\n        alt={alt}\n        width={width}\n        src={imageLink}\n      />\n    </a>\n  );\n};\n","import { Avatar, Typography, Space } from \"antd\";\nimport React from \"react\";\nimport type { YoutubePlaylistItem, YoutubeChannel } from \"youtube.ts\";\nimport { VideoThumbnail } from \"./VideoThumbnail\";\nimport { Link } from \"react-router-dom\";\nimport { getUserBySocial } from \"../content\";\n\nconst { Paragraph: P, Title, Link: A } = Typography;\n\nexport type YouTubeCardProps = {\n  video: YoutubePlaylistItem;\n  channel?: YoutubeChannel;\n};\n\nexport const YouTubeCard: React.FC<YouTubeCardProps> = ({ video, channel }) => {\n  const { title, description, thumbnails, channelTitle, channelId } =\n    video.snippet;\n\n  const username = getUserBySocial(channelId, \"youtube\")?.username ?? \"\";\n  const link = `https://www.youtube.com/watch?v=${video.contentDetails.videoId}`;\n  const avatar = channel?.snippet.thumbnails.high.url;\n\n  return (\n    <Space align=\"start\" size=\"large\" wrap>\n      <VideoThumbnail\n        width={600}\n        alt={title}\n        thumbnails={thumbnails}\n        link={link}\n      />\n\n      <Space direction=\"vertical\" className=\"youtube-card-details\">\n        <span>\n          <Avatar size=\"large\" src={avatar} />{\" \"}\n          {/* FIXME: Fix the link to the user */}\n          <Link to={`/members/${username}`}>{channelTitle}</Link>\n        </span>\n\n        <Title level={5}>\n          <A href={link} rel=\"noopener noreferrer\" target=\"_blank\">{title}</A>\n        </Title>\n        <P type=\"secondary\" ellipsis={{ rows: 5 }}>\n          {description}\n        </P>\n      </Space>\n    </Space>\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { users } from \"../content\";\n\nexport const HeadsPanel: React.FC = () => {\n  const heads = users\n    .sort((a, b) => a.username.localeCompare(b.username))\n    .map((u) => (\n      <img\n        key={u.username}\n        width={42}\n        src={`https://crafatar.com/avatars/${u.socials.minecraft.id}?overlay&size=42`}\n        alt=\"\"\n      />\n    ));\n\n  return (\n    <Space wrap align=\"baseline\">\n      {heads}\n    </Space>\n  );\n};\n","import { Divider, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { HeadsPanel } from \"./HeadsPanel\";\n\nconst { Title, Paragraph: P, Link: A } = Typography;\n\nexport const AboutPanel: React.FC = () => {\n  return (\n    <div className=\"center panel-about-wrapper\">\n      <div className=\"panel-about\">\n        <Title>What is Iron Assembly?</Title>\n        <HeadsPanel />\n        <Divider />\n        <P>\n          <i>Iron Assembly</i> is a group of{\" \"}\n          <Link to=\"/members\">creators and players</Link> focussed on making\n          enjoyable and engaging gaming content. Mainly focussed on Minecraft\n          game play, we are on YouTube, but you might also see us around on\n          Twitch or Instagram.\n        </P>\n        <P>\n          Currently the Minecraft SMP has a whitelist and is not accepting new\n          players. If you're really keen on getting involved, join the{\" \"}\n          <A href=\"https://discord.com/invite/xpCGZevjVc\" rel=\"noopener noreferrer\" target=\"_blank\">Discord</A> and come\n          say hi!\n        </P>\n        <P>\n          <A href={process.env.PUBLIC_URL}>ironassembly.com</A> is maintained by\n          Veeq, so reach out if there are any issues. Thank you to{\" \"}\n          <A href=\"https://crafatar.com\" rel=\"noopener noreferrer\" target=\"_blank\">Crafatar</A> for providing avatars.\n        </P>\n      </div>\n    </div>\n  );\n};\n","import { Typography } from \"antd\";\nimport React from \"react\";\n\nconst { Paragraph: P, Link: A } = Typography;\n\nexport const BisectPanel: React.FC = () => {\n  return (\n    <div className=\"center panel\">\n      <P>\n        All Iron Assembly servers are hosted with{\" \"}\n        <A href=\"https://www.bisecthosting.com/clients/aff.php?aff=4183\" rel=\"noopener noreferrer\" target=\"_blank\">\n          Bisect Hosting\n        </A>\n      </P>\n      <A href=\"https://www.bisecthosting.com/clients/aff.php?aff=4183\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <img\n          width={300}\n          src=\"https://www.bisecthosting.com/images/logos/logo.svg\"\n          alt=\"\"\n        />\n      </A>\n    </div>\n  );\n};\n","import { Typography, Button } from \"antd\";\nimport React from \"react\";\n\nconst { Paragraph: P } = Typography;\n\nexport const DiscordWidget: React.FC = () => {\n  return (\n    <div className=\"center panel\">\n      <iframe\n        title=\"Discord widget\"\n        src=\"https://discord.com/widget?id=913327234733973555&theme=dark\"\n        width=\"400\"\n        height=\"300\"\n        frameBorder=\"0\"\n        sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"\n      />\n    </div>\n  );\n};\n\nexport const DiscordInvite: React.FC = () => {\n  return (\n    <div className=\"center panel\">\n      <P>Want to come say hi? Join the Discord!</P>\n      <Button\n        type=\"primary\"\n        block\n        style={{ backgroundColor: \"#7289da\" }}\n        href=\"https://discord.com/invite/xpCGZevjVc\"\n      >\n        Join\n      </Button>\n    </div>\n  );\n};\n","import { Typography } from \"antd\";\nimport React from \"react\";\n\nconst { Title, Paragraph: P, Link: A } = Typography;\n\nexport const ModpackInfo: React.FC = () => {\n  return (\n    <div className=\"center panel panel-bordered\">\n      <P>Check out the official</P>\n      <Title level={4}>\n        <A href=\"https://www.curseforge.com/minecraft/modpacks/iron-assembly-community-pack\" rel=\"noopener noreferrer\" target=\"_blank\">\n          Iron Assembly Minecraft Modpack\n        </A>\n      </Title>\n      <P>\n        Designed to be a super <b>lightweight</b>, <b>performance</b> focussed,{\" \"}\n        <b>vanilla</b> experience. It's intention is to help you and your\n        friends get started in a 1.18 vanilla server as quick as possible.\n      </P>\n      <A href=\"https://www.curseforge.com/minecraft/modpacks/iron-assembly-community-pack\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <img src=\"https://i.imgur.com/A8qQlIv.png\" alt=\"\" width={300} />\n      </A>\n    </div>\n  );\n};\n","import { Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { Title, Link: A } = Typography;\n\nconst phrases = [\n  \"Cowabunga babyyyy!!\",\n  \"Done is better than perfect\",\n  \"Have you got council approval for that?\",\n  \"I'm having an identity crisis, but also, here's a chicken\",\n  \"It's for CONTENT\",\n  \"It's just a prank bro\",\n  \"It's not clickbait if you're not clicking\",\n  \"Just... one... more...\",\n  \"No spoilers!\",\n  \"Ocelots are like crisps. You can never just have one.\",\n  \"One like = one more waffle in my tummy\",\n  \"Paddington 2 is the Citizen Kane of our time\",\n  \"Procrastination is just another way to waste time\",\n  \"So I did some mining off camera...\",\n  \"The factory must grow\",\n  \"Welcome back to another episode\",\n  <>\n    Nothing like a good old fashioned{\" \"}\n    <A\n      href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      cat video\n    </A>\n  </>,\n  <>\n    Join the{\" \"}\n    <A\n      href=\"https://discord.com/invite/xpCGZevjVc\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      Discord!\n    </A>\n  </>,\n];\n\nexport const Catchphrase: React.FC = () => {\n  const [phrase, setPhrase] = useState<string | JSX.Element>(\"\");\n  useEffect(() => {\n    setPhrase(phrases[Math.floor(Math.random() * phrases.length)]);\n  }, []);\n  return (\n    <Title italic level={4} type=\"secondary\">\n      \"{phrase}\"\n    </Title>\n  );\n};\n","import { Carousel, Divider, Space } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { fetchLatestVideos } from \"../content/youtube\";\nimport { YouTubeCard } from \"../SocialComponent/YouTubeCard\";\nimport type { VideoWithChannel } from \"../content/youtube/types\";\nimport {\n  AboutPanel,\n  BisectPanel,\n  Catchphrase,\n  DiscordWidget,\n  ModpackInfo,\n} from \"../panels\";\n\nexport const HomePage: React.FC = () => {\n  const [latestVideos, setLatestVideos] = React.useState<VideoWithChannel[]>(\n    []\n  );\n  useEffect(() => {\n    fetchLatestVideos({ maxResults: 5 }).then((videos) => {\n      setLatestVideos(videos);\n    });\n  }, [setLatestVideos]);\n\n  const carouselItems = latestVideos.map((vcd) => (\n    <YouTubeCard video={vcd.video} channel={vcd.channel} key={vcd.video.id} />\n  ));\n\n  return (\n    <>\n      <div className=\"center\">\n        <h1 className=\"home-title\">Iron Assembly</h1>\n        <Catchphrase />\n      </div>\n      <Divider>Latest Content</Divider>\n      <Carousel autoplay effect=\"fade\" className=\"center\">\n        {carouselItems}\n      </Carousel>\n      <Divider />\n      <AboutPanel />\n      <Divider />\n      <div className=\"center\">\n        <Space wrap size=\"large\" align=\"start\">\n          <ModpackInfo />\n          <BisectPanel />\n          <DiscordWidget />\n        </Space>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { users } from \"../content\";\nimport { Divider, Typography, Space } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\n\nconst { Title, Paragraph: P } = Typography;\n\nexport const MembersPage: React.FC = () => {\n  const creators = users\n    .filter((u) => u.creator)\n    .sort((a, b) => a.username.localeCompare(b.username))\n    .map((u) => (\n      <Link to={`/members/${u.username}`} key={u.username}>\n        <Space align=\"center\" direction=\"vertical\" className=\"avatar-render\">\n          <img\n            src={`https://crafatar.com/renders/body/${u.socials.minecraft.id}?overlay`}\n            alt={u.username}\n            className=\"paper-hover\"\n          />\n          <Title level={3}>{u.username}</Title>\n        </Space>\n      </Link>\n    ));\n\n  const nonCreators = users\n    .filter((u) => !u.creator)\n    .sort((a, b) => a.username.localeCompare(b.username))\n    .map((u) => {\n      return (\n        <Space key={u.username} align=\"center\" direction=\"vertical\">\n          <Avatar\n            shape=\"square\"\n            size={64}\n            alt={u.username}\n            src={`https://crafatar.com/renders/head/${u.socials.minecraft.id}?overlay&size=128`}\n          />\n          <P>{u.username}</P>\n        </Space>\n      );\n    });\n\n  return (\n    <>\n      <Title>Iron Assembly Members</Title>\n      <Divider>Creators</Divider>\n      <div className=\"center\">\n        <Space size=\"large\" wrap>\n          {creators}\n        </Space>\n      </div>\n      <Divider>Players</Divider>\n      <div className=\"center\">\n        <Space wrap>{nonCreators}</Space>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const NotFoundPage: React.FC = () => {\n  return <div>NotFoundPage</div>;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\nimport {\n  TwitterOutlined,\n  YoutubeOutlined,\n  CameraOutlined,\n  InstagramOutlined,\n} from \"@ant-design/icons\";\nimport type { User } from \"../content/members\";\n\nexport type BadgeProps = {\n  color: string;\n  icon: React.ReactElement;\n  link: string;\n  display: string;\n};\n\nexport const SocialBadge: React.FC<BadgeProps> = ({\n  color,\n  icon,\n  link,\n  display,\n}) => {\n  return (\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Tag icon={icon} color={color}>\n        {display}\n      </Tag>\n    </a>\n  );\n};\n\nexport type DirectBadgeProps = {\n  username: string;\n};\n\nexport const TwitterBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#1DA1F2\"\n    icon={<TwitterOutlined />}\n    link={`https://twitter.com/${username}`}\n    display=\"Twitter\"\n  />\n);\n\nexport const YoutubeBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#FF0000\"\n    icon={<YoutubeOutlined />}\n    link={`https://youtube.com/channel/${username}`}\n    display=\"YouTube\"\n  />\n);\n\nexport const TwitchBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#9146ff\"\n    // FIXME: Find a real Twitch icon\n    icon={<CameraOutlined />}\n    link={`https://www.twitch.tv/${username}`}\n    display=\"Twitch\"\n  />\n);\n\nexport const InstagramBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#30618A\"\n    icon={<InstagramOutlined />}\n    link={`https://www.instagram.com/${username}`}\n    display=\"Instagram\"\n  />\n);\n\nexport type SocialBadgesProps = {} & User[\"socials\"];\nexport const SocialBadges: React.FC<SocialBadgesProps> = ({\n  twitter,\n  youtube,\n  twitch,\n  instagram,\n}) => {\n  return (\n    <>\n      {youtube && <YoutubeBadge username={youtube.id} />}\n      {twitch && <TwitchBadge username={twitch.id} />}\n      {twitter && <TwitterBadge username={twitter.id} />}\n      {instagram && <InstagramBadge username={instagram.id} />}\n    </>\n  );\n};\n","import React from \"react\";\nimport TwitchEmbed from \"react-twitch-embed-video\";\n\nexport type TwitchPageProps = {\n  channel: string;\n};\n\nexport const TwitchPage: React.FC<TwitchPageProps> = ({ channel }) => {\n  return (\n    <TwitchEmbed\n      channel={channel}\n      muted\n      theme=\"light\"\n      width=\"100%\"\n      height=\"800px\"\n    />\n  );\n};\n","import React from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\n\nexport type TwitterFeedProps = {\n  screenName: string;\n};\n\nexport const TwitterFeed: React.FC<TwitterFeedProps> = ({ screenName }) => {\n  return (\n    <Timeline\n      dataSource={{\n        sourceType: \"profile\",\n        screenName,\n      }}\n      options={{\n        chrome: \"noheader, nofooter\",\n        dnt: true,\n        height: \"800px\",\n      }}\n    />\n  );\n};\n","import { List } from \"antd\";\nimport dateFormat from \"dateformat\";\nimport React from \"react\";\nimport { VideoWithChannel } from \"../content/youtube/types\";\nimport { VideoThumbnail } from \"./VideoThumbnail\";\n\nexport type YouTubeListProps = {\n  playlistItems: VideoWithChannel[];\n};\n\nexport const YouTubeList: React.FC<YouTubeListProps> = ({ playlistItems }) => {\n  return (\n    <div className=\"youtube-list\">\n      <List\n        loading={playlistItems.length === 0}\n        dataSource={playlistItems}\n        itemLayout=\"horizontal\"\n        renderItem={({ video }) => {\n          const link = `https://www.youtube.com/watch?v=${video.contentDetails.videoId}`;\n          return (\n            <List.Item\n              key={video.id}\n              extra={\n                <VideoThumbnail\n                  width={200}\n                  alt={video.snippet.title}\n                  thumbnails={video.snippet.thumbnails}\n                  link={link}\n                />\n              }\n            >\n              <List.Item.Meta\n                title={\n                  <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {video.snippet.title}\n                  </a>\n                }\n                description={dateFormat(video.snippet.publishedAt)}\n              />\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n};\n","import { notification, Typography, Divider, Row, Col, Space } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { YoutubeChannel } from \"youtube.ts\";\nimport { getUser } from \"../content\";\nimport { fetchChannelData, fetchLatestVideos } from \"../content/youtube\";\nimport { VideoWithChannel } from \"../content/youtube/types\";\nimport { SocialBadges } from \"../SocialComponent/SocialBadges\";\nimport { TwitchPage } from \"../SocialComponent/TwitchPage\";\nimport { TwitterFeed } from \"../SocialComponent/TwitterFeed\";\nimport { YouTubeList } from \"../SocialComponent/YouTubeList\";\n\nconst { Title, Paragraph: P } = Typography;\n\nexport const ProfilePage: React.FC = () => {\n  const navigate = useNavigate();\n\n  const { username } = useParams();\n  const user = getUser(username ?? \"\");\n\n  const [youtubeChannelData, setYouTubeChannelData] = React.useState<\n    YoutubeChannel | undefined\n  >();\n  const [playlistItems, setPlaylistItems] = React.useState<VideoWithChannel[]>(\n    []\n  );\n\n  const userNotFound = () =>\n    notification.error({\n      message: \"Could not find player\",\n      description: \"Sorry, the user you were looking for could not be found.\",\n    });\n\n  useEffect(() => {\n    if (!username || !user) {\n      userNotFound();\n      return;\n    }\n\n    const { youtube } = user.socials;\n\n    if (youtube) {\n      const channelId = youtube.id;\n      fetchChannelData(channelId).then((channel) => {\n        setYouTubeChannelData(channel);\n      });\n      fetchLatestVideos({ channelIds: [channelId] }).then((videos) => {\n        setPlaylistItems(videos);\n      });\n    }\n  }, [username, user]);\n\n  if (!username || !user) {\n    navigate(\"/members\");\n    return null;\n  }\n\n  const { youtube, twitter, twitch } = user.socials;\n\n  const description =\n    user.description ?? youtubeChannelData?.snippet.description;\n\n  const Badges = <SocialBadges {...user.socials} />;\n\n  return (\n    <div>\n      <Row gutter={16} wrap>\n        {youtube && (\n          <Col span={4} className=\"center\">\n            <img\n              src={youtubeChannelData?.snippet.thumbnails.high.url}\n              alt=\"\"\n              height=\"100%\"\n              width=\"100%\"\n              className=\"profile-image\"\n            />\n          </Col>\n        )}\n\n        <Col span={20}>\n          <Space align=\"center\">\n            <Title style={{ margin: 0 }}>{username}</Title>\n            {Badges}\n          </Space>\n          {description && <P>{description}</P>}\n        </Col>\n      </Row>\n\n      <Row gutter={16} wrap>\n        {youtube && (\n          <Col lg={8} md={12} sm={24}>\n            <Divider>Latest Videos</Divider>\n            <YouTubeList playlistItems={playlistItems} />\n          </Col>\n        )}\n\n        {twitch && (\n          <Col lg={8} md={12} sm={24}>\n            <Divider>Latest Streams</Divider>\n            <TwitchPage channel={twitch.id} />\n          </Col>\n        )}\n\n        {twitter && (\n          <Col lg={8} md={12} sm={24}>\n            <Divider>Latest Tweets</Divider>\n            <TwitterFeed screenName={twitter.id} />\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport App from \"./App\";\nimport { HomePage, MembersPage, NotFoundPage, ProfilePage } from \"./pages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/members\" element={<MembersPage />} />\n          <Route path=\"/members/:username\" element={<ProfilePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}