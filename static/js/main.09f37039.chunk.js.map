{"version":3,"sources":["App.tsx","content/members.ts","content/youtube/index.ts","SocialComponent/VideoThumbnail.tsx","SocialComponent/YouTubeCard.tsx","pages/HomePage.tsx","pages/MembersPage.tsx","pages/NotFoundPage.tsx","SocialComponent/SocialBadges.tsx","SocialComponent/TwitchPage.tsx","SocialComponent/TwitterFeed.tsx","SocialComponent/YouTubeList.tsx","pages/ProfilePage.tsx","index.tsx"],"names":["Header","Layout","Content","Footer","ReactGA","initialize","process","err","console","error","App","className","to","src","alt","theme","mode","selectable","Item","users","creator","username","socials","minecraft","id","twitter","youtube","twitch","instagram","getIdsBySocial","social","reduce","acc","user","push","YouTube","getUploadPlaylistId","mem","channelId","a","fetchChannelData","channelData","contentDetails","relatedPlaylists","uploads","maxAge","getPlaylistContent","playlistId","playlists","items","channels","get","channel","fetchLatestVideos","maxResults","channelIds","ids","Promise","all","map","playlistIds","videos","flat","sort","b","Date","snippet","publishedAt","getTime","slice","video","VideoThumbnail","thumbnails","width","link","maxres","high","url","Meta","Card","YouTubeCard","title","description","videoId","avatar","href","target","rel","cover","undefined","Title","Typography","HomePage","React","useState","latestVideos","setLatestVideos","useEffect","then","carouselItems","vcd","orientation","style","autoplay","direction","wrap","height","frameBorder","sandbox","P","Paragraph","MembersPage","creators","filter","u","localeCompare","align","level","nonCreators","shape","size","NotFoundPage","SocialBadge","color","icon","display","TwitterBadge","TwitterOutlined","YoutubeBadge","YoutubeOutlined","TwitchBadge","CameraOutlined","InstagramBadge","InstagramOutlined","SocialBadges","TwitchPage","muted","TwitterFeed","screenName","dataSource","sourceType","options","chrome","dnt","YouTubeList","playlistItems","VideoList","loading","length","itemLayout","renderItem","extra","dateFormat","ProfilePage","term","navigate","useNavigate","useParams","find","youtubeChannelData","setYouTubeChannelData","setPlaylistItems","notification","message","Badges","gutter","span","margin","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.09f37039.chunk.js","sourcesContent":["import \"./App.less\";\nimport { Layout, Menu } from \"antd\";\nimport React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport ReactGA from \"react-ga4\";\n\nconst { Header, Content, Footer } = Layout;\n\ntry {\n  ReactGA.initialize(process.env.REACT_APP_GA_ID || \"\");\n} catch (err) {\n  console.error(\"GA initialization failed\", err);\n}\n\nfunction App() {\n  return (\n    <Layout className=\"app\">\n      <Header>\n        <Link to=\"/\">\n          <img\n            className=\"logo\"\n            src={`${process.env.PUBLIC_URL}/images/forge_cutout.png`}\n            alt=\"\"\n          />\n        </Link>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n          <Menu.Item key=\"/\">\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/members\">\n            <Link to=\"/members\">Members</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content className=\"content\">\n        <Outlet />\n      </Content>\n\n      <Footer className=\"footer\">Iron Assembly 2021</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","export type SocialLink = {\n  id: string;\n};\n\nexport type User = {\n  username: string;\n  creator: boolean;\n  socials: { minecraft: SocialLink; [key: string]: SocialLink };\n  description?: string;\n};\n\nexport const users: User[] = [\n  {\n    creator: true,\n    username: \"Veeq\",\n    socials: {\n      minecraft: { id: \"4ada8e80-497b-4137-8a95-2cc3757413e6\" },\n      twitter: { id: \"VeeqPlays\" },\n      youtube: { id: \"UCeT-ST2d4VlwOi7JU1o148w\" },\n      twitch: { id: \"veeqplays\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"fusion\",\n    socials: {\n      minecraft: { id: \"8d5d21ce-3f02-4994-bfcc-0bc57e82fc6c\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"boredy\",\n    socials: {\n      minecraft: { id: \"63ede22f-69a7-429e-960b-1a3410cb660e\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"XxxSalvador\",\n    socials: {\n      minecraft: { id: \"06695828-9677-4892-8f98-8e254febc6c5\" },\n    },\n  },\n  {\n    creator: true,\n    username: \"Coconut_Beast\",\n    socials: {\n      minecraft: { id: \"1873c79d-c48c-418a-9b02-3114ed338b9a\" },\n      youtube: { id: \"UCn6dT3-it_j7uJ2ZUXmBqJQ\" },\n      twitch: { id: \"coconut_beast\" },\n      instagram: { id: \"the_coconut_beast\" },\n    },\n  },\n  {\n    creator: true,\n    username: \"Darrix2364\",\n    socials: {\n      minecraft: { id: \"af3edba7-94f4-494b-8235-16f727ccadab\" },\n      youtube: { id: \"UCJ13xqeoVJJtd7r5pb8myJg\" },\n      twitch: { id: \"darrix2364\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"DMoney6\",\n    socials: {\n      minecraft: { id: \"e4af981b-8c65-4f26-b97d-02fa4dc3b4df\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"_mid_knight_\",\n    socials: {\n      minecraft: { id: \"a2208746-25c9-4abf-a76b-31390b9d67b1\" },\n    },\n  },\n  {\n    creator: false,\n    username: \"emanemone\",\n    socials: {\n      minecraft: { id: \"b95c2f80-66e0-4561-81a3-8dd671bc5065\" },\n    },\n  },\n];\n\nexport const getUser = (term: string): User | undefined => {\n  return users.find((user) => user.username === term);\n};\n\nexport const getIdsBySocial = (social: string): string[] => {\n  return users.reduce((acc, user) => {\n    if (user.socials[social]) {\n      acc.push(user.socials[social].id);\n    }\n    return acc;\n  }, [] as string[]);\n};\n","import { getIdsBySocial } from \"../members\";\nimport { LatestVideosOptions, VideoWithChannel } from \"./types\";\nimport mem from \"mem\";\nimport YouTube from \"youtube.ts\";\n\nconst youtube = new YouTube(process.env.REACT_APP_GOOGLE_API_KEY);\n\nexport const getUploadPlaylistId = mem(\n  async (channelId: string) => {\n    const channelData = await fetchChannelData(channelId);\n    return channelData.contentDetails.relatedPlaylists.uploads;\n  },\n  { maxAge: 10 * 60 * 1000 } // 10 minutes\n);\n\nexport const getPlaylistContent = mem(\n  async (playlistId: string) => {\n    return (\n      await youtube.playlists.items(\n        `https://www.youtube.com/playlist?list=${playlistId}`\n      )\n    ).items;\n  },\n  { maxAge: 10 * 60 * 1000 } // 10 minutes\n);\n\nexport const fetchChannelData = mem(\n  async (channelId: string) => {\n    const channel = await youtube.channels.get(\n      `https://www.youtube.com/channel/${channelId}`\n    );\n\n    return channel;\n  },\n  { maxAge: 10 * 60 * 1000 } // 10 minutes\n);\n\nexport const fetchLatestVideos = async ({\n  maxResults,\n  channelIds,\n}: LatestVideosOptions): Promise<VideoWithChannel[]> => {\n  const ids = channelIds ?? getIdsBySocial(\"youtube\");\n\n  const playlistIds = await Promise.all(ids.map(getUploadPlaylistId));\n  const videos = (await Promise.all(playlistIds.map(getPlaylistContent)))\n    .flat()\n    .sort((a, b) => {\n      return (\n        new Date(b.snippet.publishedAt).getTime() -\n        new Date(a.snippet.publishedAt).getTime()\n      );\n    })\n    .slice(0, maxResults);\n\n  return await Promise.all(\n    videos.map(async (video) => {\n      const channel = await fetchChannelData(video.snippet.channelId);\n      return {\n        video,\n        channel,\n      };\n    })\n  );\n};\n","import React from \"react\";\nimport type { YoutubeVideoSnippet } from \"youtube.ts\";\n\nexport type VideoThumbnailProps = {\n  thumbnails: YoutubeVideoSnippet[\"thumbnails\"];\n  alt: string;\n  width?: number;\n};\n\nexport const VideoThumbnail: React.FC<VideoThumbnailProps> = ({\n  thumbnails,\n  alt,\n  width,\n}) => {\n  const image = thumbnails.maxres || thumbnails.high;\n  const link = image.url;\n\n  return <img width={width} alt={alt} src={link} className=\"video-thumbnail\" />;\n};\n","import { Card, Avatar } from \"antd\";\nimport React from \"react\";\nimport type { YoutubePlaylistItem, YoutubeChannel } from \"youtube.ts\";\nimport { VideoThumbnail } from \"./VideoThumbnail\";\n\nconst { Meta } = Card;\n\nexport type YouTubeCardProps = {\n  video: YoutubePlaylistItem;\n  channel?: YoutubeChannel;\n};\n\nexport const YouTubeCard: React.FC<YouTubeCardProps> = ({ video, channel }) => {\n  const { title, description, thumbnails } = video.snippet;\n\n  const link = `https://www.youtube.com/watch?v=${video.contentDetails.videoId}`;\n  const avatar = channel?.snippet.thumbnails.high.url;\n\n  return (\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Card\n        className=\"youtube-card-details\"\n        cover={<VideoThumbnail alt={title} thumbnails={thumbnails} />}\n      >\n        <Meta\n          title={title}\n          description={description}\n          avatar={avatar ? <Avatar src={avatar} /> : undefined}\n        />\n      </Card>\n    </a>\n  );\n};\n","import { Carousel, Divider, Space, Typography } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { fetchLatestVideos } from \"../content/youtube\";\nimport { YouTubeCard } from \"../SocialComponent/YouTubeCard\";\nimport type { VideoWithChannel } from \"../content/youtube/types\";\n\nconst { Title } = Typography;\n\nexport const HomePage = () => {\n  const [latestVideos, setLatestVideos] = React.useState<VideoWithChannel[]>(\n    []\n  );\n  useEffect(() => {\n    fetchLatestVideos({ maxResults: 5 }).then((videos) => {\n      setLatestVideos(videos);\n    });\n  }, [setLatestVideos]);\n\n  const carouselItems = latestVideos.map((vcd) => (\n    <YouTubeCard video={vcd.video} channel={vcd.channel} key={vcd.video.id} />\n  ));\n\n  return (\n    <div className=\"homepage\">\n      <Title>Iron Assembly</Title>\n      <Divider orientation=\"left\">Latest Videos</Divider>\n      <div style={{ width: \"534px\" }}>\n        <Carousel autoplay>{carouselItems}</Carousel>\n      </div>\n      <Divider orientation=\"left\">Socials</Divider>\n      <Space direction=\"horizontal\" wrap>\n        <iframe\n          title=\"Discord widget\"\n          src=\"https://discord.com/widget?id=913327234733973555&theme=dark\"\n          width=\"350\"\n          height=\"300\"\n          frameBorder=\"0\"\n          sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\"\n        />\n      </Space>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { users } from \"../content\";\nimport { Divider, Typography, Space } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\n\nconst { Title, Paragraph: P } = Typography;\n\nexport const MembersPage = () => {\n  const creators = users\n    .filter((u) => u.creator)\n    .sort((a, b) => a.username.localeCompare(b.username))\n    .map((u) => (\n      <Link to={`/members/${u.username}`} key={u.username}>\n        <Space align=\"center\" direction=\"vertical\">\n          <img\n            src={`https://crafatar.com/renders/body/${u.socials.minecraft.id}?overlay`}\n            alt={u.username}\n            className=\"paper-hover\"\n          />\n          <Title level={3}>{u.username}</Title>\n        </Space>\n      </Link>\n    ));\n\n  const nonCreators = users\n    .filter((u) => !u.creator)\n    .sort((a, b) => a.username.localeCompare(b.username))\n    .map((u) => {\n      return (\n        <Space key={u.username} align=\"center\" direction=\"vertical\">\n          <Avatar\n            shape=\"square\"\n            size={64}\n            alt={u.username}\n            src={`https://crafatar.com/renders/head/${u.socials.minecraft.id}?overlay&size=128`}\n          />\n          <P>{u.username}</P>\n        </Space>\n      );\n    });\n\n  return (\n    <>\n      <Title>Iron Assembly Members</Title>\n      <Divider>Creators</Divider>\n      <div className=\"center\">\n        <Space size=\"large\">{creators}</Space>\n      </div>\n      <Divider>Players</Divider>\n      <div className=\"center\">\n        <Space>{nonCreators}</Space>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const NotFoundPage = () => {\n  return <div>NotFoundPage</div>;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\nimport {\n  TwitterOutlined,\n  YoutubeOutlined,\n  CameraOutlined,\n  InstagramOutlined,\n} from \"@ant-design/icons\";\nimport type { User } from \"../content/members\";\n\nexport type BadgeProps = {\n  color: string;\n  icon: React.ReactElement;\n  link: string;\n  display: string;\n};\n\nexport const SocialBadge: React.FC<BadgeProps> = ({\n  color,\n  icon,\n  link,\n  display,\n}) => {\n  return (\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Tag icon={icon} color={color}>\n        {display}\n      </Tag>\n    </a>\n  );\n};\n\nexport type DirectBadgeProps = {\n  username: string;\n};\n\nexport const TwitterBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#1DA1F2\"\n    icon={<TwitterOutlined />}\n    link={`https://twitter.com/${username}`}\n    display=\"Twitter\"\n  />\n);\n\nexport const YoutubeBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#FF0000\"\n    icon={<YoutubeOutlined />}\n    link={`https://youtube.com/channel/${username}`}\n    display=\"YouTube\"\n  />\n);\n\nexport const TwitchBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#9146ff\"\n    // FIXME: Find a real Twitch icon\n    icon={<CameraOutlined />}\n    link={`https://www.twitch.tv/${username}`}\n    display=\"Twitch\"\n  />\n);\n\nexport const InstagramBadge: React.FC<DirectBadgeProps> = ({ username }) => (\n  <SocialBadge\n    color=\"#30618A\"\n    icon={<InstagramOutlined />}\n    link={`https://www.instagram.com/${username}`}\n    display=\"Instagram\"\n  />\n);\n\nexport type SocialBadgesProps = {} & User[\"socials\"];\nexport const SocialBadges: React.FC<SocialBadgesProps> = ({\n  twitter,\n  youtube,\n  twitch,\n  instagram,\n}) => {\n  return (\n    <>\n      {youtube && <YoutubeBadge username={youtube.id} />}\n      {twitch && <TwitchBadge username={twitch.id} />}\n      {twitter && <TwitterBadge username={twitter.id} />}\n      {instagram && <InstagramBadge username={instagram.id} />}\n    </>\n  );\n};\n","import React from \"react\";\nimport TwitchEmbed from \"react-twitch-embed-video\";\n\nexport type TwitchPageProps = {\n  channel: string;\n};\n\nexport const TwitchPage: React.FC<TwitchPageProps> = ({ channel }) => {\n  return (\n    <TwitchEmbed\n      channel={channel}\n      muted\n      theme=\"light\"\n      width=\"100%\"\n      height=\"800px\"\n    />\n  );\n};\n","import React from \"react\";\nimport { Timeline } from \"react-twitter-widgets\";\n\nexport type TwitterFeedProps = {\n  screenName: string;\n};\n\nexport const TwitterFeed: React.FC<TwitterFeedProps> = ({ screenName }) => {\n  return (\n    <Timeline\n      dataSource={{\n        sourceType: \"profile\",\n        screenName,\n      }}\n      options={{\n        chrome: \"noheader, nofooter\",\n        dnt: true,\n        height: \"800px\",\n      }}\n    />\n  );\n};\n","import { List } from \"antd\";\nimport dateFormat from \"dateformat\";\nimport React from \"react\";\nimport { VideoWithChannel } from \"../content/youtube/types\";\nimport { VideoThumbnail } from \"./VideoThumbnail\";\n\nexport type YouTubeListProps = {\n  playlistItems: VideoWithChannel[];\n};\n\nexport const YouTubeList: React.FC<YouTubeListProps> = ({ playlistItems }) => {\n  const VideoList = (\n    <List\n      loading={playlistItems.length === 0}\n      dataSource={playlistItems}\n      itemLayout=\"horizontal\"\n      renderItem={({ video, channel }) => {\n        const link = `https://www.youtube.com/watch?v=${video.contentDetails.videoId}`;\n        return (\n          <List.Item\n            key={video.id}\n            extra={\n              <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                <VideoThumbnail\n                  width={200}\n                  alt={video.snippet.title}\n                  thumbnails={video.snippet.thumbnails}\n                />\n              </a>\n            }\n          >\n            <List.Item.Meta\n              title={\n                <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {video.snippet.title}\n                </a>\n              }\n              description={dateFormat(video.snippet.publishedAt)}\n            />\n          </List.Item>\n        );\n      }}\n    />\n  );\n  return <div>{VideoList}</div>;\n};\n","import { notification, Typography, Divider, Row, Col, Space } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { YoutubeChannel } from \"youtube.ts\";\nimport { getUser } from \"../content\";\nimport { fetchChannelData, fetchLatestVideos } from \"../content/youtube\";\nimport { VideoWithChannel } from \"../content/youtube/types\";\nimport { SocialBadges } from \"../SocialComponent/SocialBadges\";\nimport { TwitchPage } from \"../SocialComponent/TwitchPage\";\nimport { TwitterFeed } from \"../SocialComponent/TwitterFeed\";\nimport { YouTubeList } from \"../SocialComponent/YouTubeList\";\n\nconst { Title, Paragraph: P } = Typography;\n\nexport const ProfilePage = () => {\n  const navigate = useNavigate();\n\n  const { username } = useParams();\n  const user = getUser(username ?? \"\");\n\n  const [youtubeChannelData, setYouTubeChannelData] = React.useState<\n    YoutubeChannel | undefined\n  >();\n  const [playlistItems, setPlaylistItems] = React.useState<VideoWithChannel[]>(\n    []\n  );\n\n  const userNotFound = () =>\n    notification.error({\n      message: \"Could not find player\",\n      description: \"Sorry, the user you were looking for could not be found.\",\n    });\n\n  useEffect(() => {\n    if (!username || !user) {\n      userNotFound();\n      return;\n    }\n\n    const { youtube } = user.socials;\n\n    if (youtube) {\n      const channelId = youtube.id;\n      fetchChannelData(channelId).then((channel) => {\n        setYouTubeChannelData(channel);\n      });\n      fetchLatestVideos({ channelIds: [channelId] }).then((videos) => {\n        setPlaylistItems(videos);\n      });\n    }\n  }, [username, user]);\n\n  if (!username || !user) {\n    navigate(\"/members\");\n    return null;\n  }\n\n  const { youtube, twitter, twitch } = user.socials;\n\n  const description =\n    user.description ?? youtubeChannelData?.snippet.description;\n\n  const Badges = <SocialBadges {...user.socials} />;\n\n  return (\n    <div>\n      <Row gutter={16} wrap>\n        {youtube && (\n          <Col span={4} className=\"center\">\n            <img\n              src={youtubeChannelData?.snippet.thumbnails.high.url}\n              alt=\"\"\n              height=\"100%\"\n              width=\"100%\"\n            />\n          </Col>\n        )}\n\n        <Col span={16}>\n          <Space align=\"center\">\n            <Title style={{ margin: 0 }}>{username}</Title>\n            {Badges}\n          </Space>\n          {description && <P>{description}</P>}\n        </Col>\n      </Row>\n\n      <Row gutter={16} wrap>\n        {youtube && (\n          <Col span={8}>\n            <Divider>Latest Videos</Divider>\n            <YouTubeList playlistItems={playlistItems} />\n          </Col>\n        )}\n\n        {twitch && (\n          <Col span={8}>\n            <Divider>Latest Streams</Divider>\n            <TwitchPage channel={twitch.id} />\n          </Col>\n        )}\n\n        {twitter && (\n          <Col span={8}>\n            <Divider>Latest Tweets</Divider>\n            <TwitterFeed screenName={twitter.id} />\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  HashRouter,\n  Route,\n  Routes\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport {\n  HomePage,\n  MembersPage,\n  NotFoundPage,\n  ProfilePage\n} from \"./pages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/members\" element={<MembersPage />} />\n          <Route path=\"/members/:username\" element={<ProfilePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}